Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> statement_list
Rule 2     statement_list -> statement
Rule 3     statement_list -> statement_list statement
Rule 4     statement -> expression_statement
Rule 5     statement -> conditional_statement
Rule 6     statement -> loop_statement
Rule 7     expression_statement -> ID ASSIGN expression
Rule 8     expression -> expression PLUS term
Rule 9     expression -> expression MINUS term
Rule 10    expression -> term
Rule 11    term -> term TIMES factor
Rule 12    term -> term DIVIDE factor
Rule 13    term -> factor
Rule 14    factor -> NUMBER
Rule 15    factor -> ID
Rule 16    factor -> LPAREN expression RPAREN
Rule 17    expression -> expression LESS term
Rule 18    expression -> expression GREATER term
Rule 19    expression -> expression EQUAL term
Rule 20    conditional_statement -> IF expression statement ELSE statement
Rule 21    conditional_statement -> IF expression statement
Rule 22    loop_statement -> WHILE expression statement

Terminals, with rules where they appear

ASSIGN               : 7
DIVIDE               : 12
ELSE                 : 20
EQUAL                : 19
GREATER              : 18
ID                   : 7 15
IF                   : 20 21
LESS                 : 17
LPAREN               : 16
MINUS                : 9
NUMBER               : 14
PLUS                 : 8
RPAREN               : 16
TIMES                : 11
WHILE                : 22
error                : 

Nonterminals, with rules where they appear

conditional_statement : 5
expression           : 7 8 9 16 17 18 19 20 21 22
expression_statement : 4
factor               : 11 12 13
loop_statement       : 6
program              : 0
statement            : 2 3 20 20 21 22
statement_list       : 1 3
term                 : 8 9 10 11 12 17 18 19

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement_list
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (4) statement -> . expression_statement
    (5) statement -> . conditional_statement
    (6) statement -> . loop_statement
    (7) expression_statement -> . ID ASSIGN expression
    (20) conditional_statement -> . IF expression statement ELSE statement
    (21) conditional_statement -> . IF expression statement
    (22) loop_statement -> . WHILE expression statement

    ID              shift and go to state 7
    IF              shift and go to state 8
    WHILE           shift and go to state 9

    program                        shift and go to state 1
    statement_list                 shift and go to state 2
    statement                      shift and go to state 3
    expression_statement           shift and go to state 4
    conditional_statement          shift and go to state 5
    loop_statement                 shift and go to state 6

state 1

    (0) S' -> program .



state 2

    (1) program -> statement_list .
    (3) statement_list -> statement_list . statement
    (4) statement -> . expression_statement
    (5) statement -> . conditional_statement
    (6) statement -> . loop_statement
    (7) expression_statement -> . ID ASSIGN expression
    (20) conditional_statement -> . IF expression statement ELSE statement
    (21) conditional_statement -> . IF expression statement
    (22) loop_statement -> . WHILE expression statement

    $end            reduce using rule 1 (program -> statement_list .)
    ID              shift and go to state 7
    IF              shift and go to state 8
    WHILE           shift and go to state 9

    statement                      shift and go to state 10
    expression_statement           shift and go to state 4
    conditional_statement          shift and go to state 5
    loop_statement                 shift and go to state 6

state 3

    (2) statement_list -> statement .

    ID              reduce using rule 2 (statement_list -> statement .)
    IF              reduce using rule 2 (statement_list -> statement .)
    WHILE           reduce using rule 2 (statement_list -> statement .)
    $end            reduce using rule 2 (statement_list -> statement .)


state 4

    (4) statement -> expression_statement .

    ID              reduce using rule 4 (statement -> expression_statement .)
    IF              reduce using rule 4 (statement -> expression_statement .)
    WHILE           reduce using rule 4 (statement -> expression_statement .)
    $end            reduce using rule 4 (statement -> expression_statement .)
    ELSE            reduce using rule 4 (statement -> expression_statement .)


state 5

    (5) statement -> conditional_statement .

    ID              reduce using rule 5 (statement -> conditional_statement .)
    IF              reduce using rule 5 (statement -> conditional_statement .)
    WHILE           reduce using rule 5 (statement -> conditional_statement .)
    $end            reduce using rule 5 (statement -> conditional_statement .)
    ELSE            reduce using rule 5 (statement -> conditional_statement .)


state 6

    (6) statement -> loop_statement .

    ID              reduce using rule 6 (statement -> loop_statement .)
    IF              reduce using rule 6 (statement -> loop_statement .)
    WHILE           reduce using rule 6 (statement -> loop_statement .)
    $end            reduce using rule 6 (statement -> loop_statement .)
    ELSE            reduce using rule 6 (statement -> loop_statement .)


state 7

    (7) expression_statement -> ID . ASSIGN expression

    ASSIGN          shift and go to state 11


state 8

    (20) conditional_statement -> IF . expression statement ELSE statement
    (21) conditional_statement -> IF . expression statement
    (8) expression -> . expression PLUS term
    (9) expression -> . expression MINUS term
    (10) expression -> . term
    (17) expression -> . expression LESS term
    (18) expression -> . expression GREATER term
    (19) expression -> . expression EQUAL term
    (11) term -> . term TIMES factor
    (12) term -> . term DIVIDE factor
    (13) term -> . factor
    (14) factor -> . NUMBER
    (15) factor -> . ID
    (16) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 15
    ID              shift and go to state 16
    LPAREN          shift and go to state 17

    expression                     shift and go to state 12
    term                           shift and go to state 13
    factor                         shift and go to state 14

state 9

    (22) loop_statement -> WHILE . expression statement
    (8) expression -> . expression PLUS term
    (9) expression -> . expression MINUS term
    (10) expression -> . term
    (17) expression -> . expression LESS term
    (18) expression -> . expression GREATER term
    (19) expression -> . expression EQUAL term
    (11) term -> . term TIMES factor
    (12) term -> . term DIVIDE factor
    (13) term -> . factor
    (14) factor -> . NUMBER
    (15) factor -> . ID
    (16) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 15
    ID              shift and go to state 16
    LPAREN          shift and go to state 17

    expression                     shift and go to state 18
    term                           shift and go to state 13
    factor                         shift and go to state 14

state 10

    (3) statement_list -> statement_list statement .

    ID              reduce using rule 3 (statement_list -> statement_list statement .)
    IF              reduce using rule 3 (statement_list -> statement_list statement .)
    WHILE           reduce using rule 3 (statement_list -> statement_list statement .)
    $end            reduce using rule 3 (statement_list -> statement_list statement .)


state 11

    (7) expression_statement -> ID ASSIGN . expression
    (8) expression -> . expression PLUS term
    (9) expression -> . expression MINUS term
    (10) expression -> . term
    (17) expression -> . expression LESS term
    (18) expression -> . expression GREATER term
    (19) expression -> . expression EQUAL term
    (11) term -> . term TIMES factor
    (12) term -> . term DIVIDE factor
    (13) term -> . factor
    (14) factor -> . NUMBER
    (15) factor -> . ID
    (16) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 15
    ID              shift and go to state 16
    LPAREN          shift and go to state 17

    expression                     shift and go to state 19
    term                           shift and go to state 13
    factor                         shift and go to state 14

state 12

    (20) conditional_statement -> IF expression . statement ELSE statement
    (21) conditional_statement -> IF expression . statement
    (8) expression -> expression . PLUS term
    (9) expression -> expression . MINUS term
    (17) expression -> expression . LESS term
    (18) expression -> expression . GREATER term
    (19) expression -> expression . EQUAL term
    (4) statement -> . expression_statement
    (5) statement -> . conditional_statement
    (6) statement -> . loop_statement
    (7) expression_statement -> . ID ASSIGN expression
    (20) conditional_statement -> . IF expression statement ELSE statement
    (21) conditional_statement -> . IF expression statement
    (22) loop_statement -> . WHILE expression statement

    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    LESS            shift and go to state 23
    GREATER         shift and go to state 24
    EQUAL           shift and go to state 25
    ID              shift and go to state 7
    IF              shift and go to state 8
    WHILE           shift and go to state 9

    statement                      shift and go to state 20
    expression_statement           shift and go to state 4
    conditional_statement          shift and go to state 5
    loop_statement                 shift and go to state 6

state 13

    (10) expression -> term .
    (11) term -> term . TIMES factor
    (12) term -> term . DIVIDE factor

    PLUS            reduce using rule 10 (expression -> term .)
    MINUS           reduce using rule 10 (expression -> term .)
    LESS            reduce using rule 10 (expression -> term .)
    GREATER         reduce using rule 10 (expression -> term .)
    EQUAL           reduce using rule 10 (expression -> term .)
    ID              reduce using rule 10 (expression -> term .)
    IF              reduce using rule 10 (expression -> term .)
    WHILE           reduce using rule 10 (expression -> term .)
    $end            reduce using rule 10 (expression -> term .)
    ELSE            reduce using rule 10 (expression -> term .)
    RPAREN          reduce using rule 10 (expression -> term .)
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 27


state 14

    (13) term -> factor .

    TIMES           reduce using rule 13 (term -> factor .)
    DIVIDE          reduce using rule 13 (term -> factor .)
    PLUS            reduce using rule 13 (term -> factor .)
    MINUS           reduce using rule 13 (term -> factor .)
    LESS            reduce using rule 13 (term -> factor .)
    GREATER         reduce using rule 13 (term -> factor .)
    EQUAL           reduce using rule 13 (term -> factor .)
    ID              reduce using rule 13 (term -> factor .)
    IF              reduce using rule 13 (term -> factor .)
    WHILE           reduce using rule 13 (term -> factor .)
    $end            reduce using rule 13 (term -> factor .)
    ELSE            reduce using rule 13 (term -> factor .)
    RPAREN          reduce using rule 13 (term -> factor .)


state 15

    (14) factor -> NUMBER .

    TIMES           reduce using rule 14 (factor -> NUMBER .)
    DIVIDE          reduce using rule 14 (factor -> NUMBER .)
    PLUS            reduce using rule 14 (factor -> NUMBER .)
    MINUS           reduce using rule 14 (factor -> NUMBER .)
    LESS            reduce using rule 14 (factor -> NUMBER .)
    GREATER         reduce using rule 14 (factor -> NUMBER .)
    EQUAL           reduce using rule 14 (factor -> NUMBER .)
    ID              reduce using rule 14 (factor -> NUMBER .)
    IF              reduce using rule 14 (factor -> NUMBER .)
    WHILE           reduce using rule 14 (factor -> NUMBER .)
    $end            reduce using rule 14 (factor -> NUMBER .)
    ELSE            reduce using rule 14 (factor -> NUMBER .)
    RPAREN          reduce using rule 14 (factor -> NUMBER .)


state 16

    (15) factor -> ID .

    TIMES           reduce using rule 15 (factor -> ID .)
    DIVIDE          reduce using rule 15 (factor -> ID .)
    PLUS            reduce using rule 15 (factor -> ID .)
    MINUS           reduce using rule 15 (factor -> ID .)
    LESS            reduce using rule 15 (factor -> ID .)
    GREATER         reduce using rule 15 (factor -> ID .)
    EQUAL           reduce using rule 15 (factor -> ID .)
    ID              reduce using rule 15 (factor -> ID .)
    IF              reduce using rule 15 (factor -> ID .)
    WHILE           reduce using rule 15 (factor -> ID .)
    $end            reduce using rule 15 (factor -> ID .)
    ELSE            reduce using rule 15 (factor -> ID .)
    RPAREN          reduce using rule 15 (factor -> ID .)


state 17

    (16) factor -> LPAREN . expression RPAREN
    (8) expression -> . expression PLUS term
    (9) expression -> . expression MINUS term
    (10) expression -> . term
    (17) expression -> . expression LESS term
    (18) expression -> . expression GREATER term
    (19) expression -> . expression EQUAL term
    (11) term -> . term TIMES factor
    (12) term -> . term DIVIDE factor
    (13) term -> . factor
    (14) factor -> . NUMBER
    (15) factor -> . ID
    (16) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 15
    ID              shift and go to state 16
    LPAREN          shift and go to state 17

    expression                     shift and go to state 28
    term                           shift and go to state 13
    factor                         shift and go to state 14

state 18

    (22) loop_statement -> WHILE expression . statement
    (8) expression -> expression . PLUS term
    (9) expression -> expression . MINUS term
    (17) expression -> expression . LESS term
    (18) expression -> expression . GREATER term
    (19) expression -> expression . EQUAL term
    (4) statement -> . expression_statement
    (5) statement -> . conditional_statement
    (6) statement -> . loop_statement
    (7) expression_statement -> . ID ASSIGN expression
    (20) conditional_statement -> . IF expression statement ELSE statement
    (21) conditional_statement -> . IF expression statement
    (22) loop_statement -> . WHILE expression statement

    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    LESS            shift and go to state 23
    GREATER         shift and go to state 24
    EQUAL           shift and go to state 25
    ID              shift and go to state 7
    IF              shift and go to state 8
    WHILE           shift and go to state 9

    statement                      shift and go to state 29
    expression_statement           shift and go to state 4
    conditional_statement          shift and go to state 5
    loop_statement                 shift and go to state 6

state 19

    (7) expression_statement -> ID ASSIGN expression .
    (8) expression -> expression . PLUS term
    (9) expression -> expression . MINUS term
    (17) expression -> expression . LESS term
    (18) expression -> expression . GREATER term
    (19) expression -> expression . EQUAL term

    ID              reduce using rule 7 (expression_statement -> ID ASSIGN expression .)
    IF              reduce using rule 7 (expression_statement -> ID ASSIGN expression .)
    WHILE           reduce using rule 7 (expression_statement -> ID ASSIGN expression .)
    $end            reduce using rule 7 (expression_statement -> ID ASSIGN expression .)
    ELSE            reduce using rule 7 (expression_statement -> ID ASSIGN expression .)
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    LESS            shift and go to state 23
    GREATER         shift and go to state 24
    EQUAL           shift and go to state 25


state 20

    (20) conditional_statement -> IF expression statement . ELSE statement
    (21) conditional_statement -> IF expression statement .

    ELSE            shift and go to state 30
    ID              reduce using rule 21 (conditional_statement -> IF expression statement .)
    IF              reduce using rule 21 (conditional_statement -> IF expression statement .)
    WHILE           reduce using rule 21 (conditional_statement -> IF expression statement .)
    $end            reduce using rule 21 (conditional_statement -> IF expression statement .)

  ! ELSE            [ reduce using rule 21 (conditional_statement -> IF expression statement .) ]


state 21

    (8) expression -> expression PLUS . term
    (11) term -> . term TIMES factor
    (12) term -> . term DIVIDE factor
    (13) term -> . factor
    (14) factor -> . NUMBER
    (15) factor -> . ID
    (16) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 15
    ID              shift and go to state 16
    LPAREN          shift and go to state 17

    term                           shift and go to state 31
    factor                         shift and go to state 14

state 22

    (9) expression -> expression MINUS . term
    (11) term -> . term TIMES factor
    (12) term -> . term DIVIDE factor
    (13) term -> . factor
    (14) factor -> . NUMBER
    (15) factor -> . ID
    (16) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 15
    ID              shift and go to state 16
    LPAREN          shift and go to state 17

    term                           shift and go to state 32
    factor                         shift and go to state 14

state 23

    (17) expression -> expression LESS . term
    (11) term -> . term TIMES factor
    (12) term -> . term DIVIDE factor
    (13) term -> . factor
    (14) factor -> . NUMBER
    (15) factor -> . ID
    (16) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 15
    ID              shift and go to state 16
    LPAREN          shift and go to state 17

    term                           shift and go to state 33
    factor                         shift and go to state 14

state 24

    (18) expression -> expression GREATER . term
    (11) term -> . term TIMES factor
    (12) term -> . term DIVIDE factor
    (13) term -> . factor
    (14) factor -> . NUMBER
    (15) factor -> . ID
    (16) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 15
    ID              shift and go to state 16
    LPAREN          shift and go to state 17

    term                           shift and go to state 34
    factor                         shift and go to state 14

state 25

    (19) expression -> expression EQUAL . term
    (11) term -> . term TIMES factor
    (12) term -> . term DIVIDE factor
    (13) term -> . factor
    (14) factor -> . NUMBER
    (15) factor -> . ID
    (16) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 15
    ID              shift and go to state 16
    LPAREN          shift and go to state 17

    term                           shift and go to state 35
    factor                         shift and go to state 14

state 26

    (11) term -> term TIMES . factor
    (14) factor -> . NUMBER
    (15) factor -> . ID
    (16) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 15
    ID              shift and go to state 16
    LPAREN          shift and go to state 17

    factor                         shift and go to state 36

state 27

    (12) term -> term DIVIDE . factor
    (14) factor -> . NUMBER
    (15) factor -> . ID
    (16) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 15
    ID              shift and go to state 16
    LPAREN          shift and go to state 17

    factor                         shift and go to state 37

state 28

    (16) factor -> LPAREN expression . RPAREN
    (8) expression -> expression . PLUS term
    (9) expression -> expression . MINUS term
    (17) expression -> expression . LESS term
    (18) expression -> expression . GREATER term
    (19) expression -> expression . EQUAL term

    RPAREN          shift and go to state 38
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    LESS            shift and go to state 23
    GREATER         shift and go to state 24
    EQUAL           shift and go to state 25


state 29

    (22) loop_statement -> WHILE expression statement .

    ID              reduce using rule 22 (loop_statement -> WHILE expression statement .)
    IF              reduce using rule 22 (loop_statement -> WHILE expression statement .)
    WHILE           reduce using rule 22 (loop_statement -> WHILE expression statement .)
    $end            reduce using rule 22 (loop_statement -> WHILE expression statement .)
    ELSE            reduce using rule 22 (loop_statement -> WHILE expression statement .)


state 30

    (20) conditional_statement -> IF expression statement ELSE . statement
    (4) statement -> . expression_statement
    (5) statement -> . conditional_statement
    (6) statement -> . loop_statement
    (7) expression_statement -> . ID ASSIGN expression
    (20) conditional_statement -> . IF expression statement ELSE statement
    (21) conditional_statement -> . IF expression statement
    (22) loop_statement -> . WHILE expression statement

    ID              shift and go to state 7
    IF              shift and go to state 8
    WHILE           shift and go to state 9

    statement                      shift and go to state 39
    expression_statement           shift and go to state 4
    conditional_statement          shift and go to state 5
    loop_statement                 shift and go to state 6

state 31

    (8) expression -> expression PLUS term .
    (11) term -> term . TIMES factor
    (12) term -> term . DIVIDE factor

    PLUS            reduce using rule 8 (expression -> expression PLUS term .)
    MINUS           reduce using rule 8 (expression -> expression PLUS term .)
    LESS            reduce using rule 8 (expression -> expression PLUS term .)
    GREATER         reduce using rule 8 (expression -> expression PLUS term .)
    EQUAL           reduce using rule 8 (expression -> expression PLUS term .)
    ID              reduce using rule 8 (expression -> expression PLUS term .)
    IF              reduce using rule 8 (expression -> expression PLUS term .)
    WHILE           reduce using rule 8 (expression -> expression PLUS term .)
    $end            reduce using rule 8 (expression -> expression PLUS term .)
    ELSE            reduce using rule 8 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 8 (expression -> expression PLUS term .)
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 27


state 32

    (9) expression -> expression MINUS term .
    (11) term -> term . TIMES factor
    (12) term -> term . DIVIDE factor

    PLUS            reduce using rule 9 (expression -> expression MINUS term .)
    MINUS           reduce using rule 9 (expression -> expression MINUS term .)
    LESS            reduce using rule 9 (expression -> expression MINUS term .)
    GREATER         reduce using rule 9 (expression -> expression MINUS term .)
    EQUAL           reduce using rule 9 (expression -> expression MINUS term .)
    ID              reduce using rule 9 (expression -> expression MINUS term .)
    IF              reduce using rule 9 (expression -> expression MINUS term .)
    WHILE           reduce using rule 9 (expression -> expression MINUS term .)
    $end            reduce using rule 9 (expression -> expression MINUS term .)
    ELSE            reduce using rule 9 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 9 (expression -> expression MINUS term .)
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 27


state 33

    (17) expression -> expression LESS term .
    (11) term -> term . TIMES factor
    (12) term -> term . DIVIDE factor

    PLUS            reduce using rule 17 (expression -> expression LESS term .)
    MINUS           reduce using rule 17 (expression -> expression LESS term .)
    LESS            reduce using rule 17 (expression -> expression LESS term .)
    GREATER         reduce using rule 17 (expression -> expression LESS term .)
    EQUAL           reduce using rule 17 (expression -> expression LESS term .)
    ID              reduce using rule 17 (expression -> expression LESS term .)
    IF              reduce using rule 17 (expression -> expression LESS term .)
    WHILE           reduce using rule 17 (expression -> expression LESS term .)
    $end            reduce using rule 17 (expression -> expression LESS term .)
    ELSE            reduce using rule 17 (expression -> expression LESS term .)
    RPAREN          reduce using rule 17 (expression -> expression LESS term .)
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 27


state 34

    (18) expression -> expression GREATER term .
    (11) term -> term . TIMES factor
    (12) term -> term . DIVIDE factor

    PLUS            reduce using rule 18 (expression -> expression GREATER term .)
    MINUS           reduce using rule 18 (expression -> expression GREATER term .)
    LESS            reduce using rule 18 (expression -> expression GREATER term .)
    GREATER         reduce using rule 18 (expression -> expression GREATER term .)
    EQUAL           reduce using rule 18 (expression -> expression GREATER term .)
    ID              reduce using rule 18 (expression -> expression GREATER term .)
    IF              reduce using rule 18 (expression -> expression GREATER term .)
    WHILE           reduce using rule 18 (expression -> expression GREATER term .)
    $end            reduce using rule 18 (expression -> expression GREATER term .)
    ELSE            reduce using rule 18 (expression -> expression GREATER term .)
    RPAREN          reduce using rule 18 (expression -> expression GREATER term .)
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 27


state 35

    (19) expression -> expression EQUAL term .
    (11) term -> term . TIMES factor
    (12) term -> term . DIVIDE factor

    PLUS            reduce using rule 19 (expression -> expression EQUAL term .)
    MINUS           reduce using rule 19 (expression -> expression EQUAL term .)
    LESS            reduce using rule 19 (expression -> expression EQUAL term .)
    GREATER         reduce using rule 19 (expression -> expression EQUAL term .)
    EQUAL           reduce using rule 19 (expression -> expression EQUAL term .)
    ID              reduce using rule 19 (expression -> expression EQUAL term .)
    IF              reduce using rule 19 (expression -> expression EQUAL term .)
    WHILE           reduce using rule 19 (expression -> expression EQUAL term .)
    $end            reduce using rule 19 (expression -> expression EQUAL term .)
    ELSE            reduce using rule 19 (expression -> expression EQUAL term .)
    RPAREN          reduce using rule 19 (expression -> expression EQUAL term .)
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 27


state 36

    (11) term -> term TIMES factor .

    TIMES           reduce using rule 11 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 11 (term -> term TIMES factor .)
    PLUS            reduce using rule 11 (term -> term TIMES factor .)
    MINUS           reduce using rule 11 (term -> term TIMES factor .)
    LESS            reduce using rule 11 (term -> term TIMES factor .)
    GREATER         reduce using rule 11 (term -> term TIMES factor .)
    EQUAL           reduce using rule 11 (term -> term TIMES factor .)
    ID              reduce using rule 11 (term -> term TIMES factor .)
    IF              reduce using rule 11 (term -> term TIMES factor .)
    WHILE           reduce using rule 11 (term -> term TIMES factor .)
    $end            reduce using rule 11 (term -> term TIMES factor .)
    ELSE            reduce using rule 11 (term -> term TIMES factor .)
    RPAREN          reduce using rule 11 (term -> term TIMES factor .)


state 37

    (12) term -> term DIVIDE factor .

    TIMES           reduce using rule 12 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 12 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 12 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 12 (term -> term DIVIDE factor .)
    LESS            reduce using rule 12 (term -> term DIVIDE factor .)
    GREATER         reduce using rule 12 (term -> term DIVIDE factor .)
    EQUAL           reduce using rule 12 (term -> term DIVIDE factor .)
    ID              reduce using rule 12 (term -> term DIVIDE factor .)
    IF              reduce using rule 12 (term -> term DIVIDE factor .)
    WHILE           reduce using rule 12 (term -> term DIVIDE factor .)
    $end            reduce using rule 12 (term -> term DIVIDE factor .)
    ELSE            reduce using rule 12 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 12 (term -> term DIVIDE factor .)


state 38

    (16) factor -> LPAREN expression RPAREN .

    TIMES           reduce using rule 16 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 16 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 16 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 16 (factor -> LPAREN expression RPAREN .)
    LESS            reduce using rule 16 (factor -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 16 (factor -> LPAREN expression RPAREN .)
    EQUAL           reduce using rule 16 (factor -> LPAREN expression RPAREN .)
    ID              reduce using rule 16 (factor -> LPAREN expression RPAREN .)
    IF              reduce using rule 16 (factor -> LPAREN expression RPAREN .)
    WHILE           reduce using rule 16 (factor -> LPAREN expression RPAREN .)
    $end            reduce using rule 16 (factor -> LPAREN expression RPAREN .)
    ELSE            reduce using rule 16 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 16 (factor -> LPAREN expression RPAREN .)


state 39

    (20) conditional_statement -> IF expression statement ELSE statement .

    ID              reduce using rule 20 (conditional_statement -> IF expression statement ELSE statement .)
    IF              reduce using rule 20 (conditional_statement -> IF expression statement ELSE statement .)
    WHILE           reduce using rule 20 (conditional_statement -> IF expression statement ELSE statement .)
    $end            reduce using rule 20 (conditional_statement -> IF expression statement ELSE statement .)
    ELSE            reduce using rule 20 (conditional_statement -> IF expression statement ELSE statement .)

