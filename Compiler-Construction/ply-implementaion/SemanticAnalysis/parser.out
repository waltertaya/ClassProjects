Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    LBRACKET
    RBRACKET

Grammar

Rule 0     S' -> empty
Rule 1     empty -> <empty>
Rule 2     program -> declaration_list
Rule 3     declaration_list -> declaration_list declaration
Rule 4     declaration_list -> declaration
Rule 5     declaration_list -> empty
Rule 6     block -> LBRACE declaration_list RBRACE
Rule 7     declaration -> function_declaration
Rule 8     declaration -> variable_declaration
Rule 9     parameter_list -> parameter_list COMMA TYPE IDENTIFIER
Rule 10    parameter_list -> TYPE IDENTIFIER
Rule 11    parameter_list -> empty
Rule 12    function_declaration -> TYPE IDENTIFIER LPAREN parameter_list RPAREN block
Rule 13    variable_declaration -> TYPE IDENTIFIER ASSIGN expression
Rule 14    expression -> term
Rule 15    expression -> expression PLUS term
Rule 16    expression -> expression MINUS term
Rule 17    term -> factor
Rule 18    term -> term MULTIPLY factor
Rule 19    term -> term DIVIDE factor
Rule 20    factor -> NUMBER
Rule 21    factor -> IDENTIFIER

Terminals, with rules where they appear

ASSIGN               : 13
COMMA                : 9
DIVIDE               : 19
IDENTIFIER           : 9 10 12 13 21
LBRACE               : 6
LBRACKET             : 
LPAREN               : 12
MINUS                : 16
MULTIPLY             : 18
NUMBER               : 20
PLUS                 : 15
RBRACE               : 6
RBRACKET             : 
RPAREN               : 12
TYPE                 : 9 10 12 13
error                : 

Nonterminals, with rules where they appear

block                : 12
declaration          : 3 4
declaration_list     : 2 3 6
empty                : 5 11 0
expression           : 13 15 16
factor               : 17 18 19
function_declaration : 7
parameter_list       : 9 12
program              : 
term                 : 14 15 16 18 19
variable_declaration : 8

Parsing method: LALR

state 0

    (0) S' -> . empty
    (1) empty -> .

    $end            reduce using rule 1 (empty -> .)

    empty                          shift and go to state 1

state 1

    (0) S' -> empty .


